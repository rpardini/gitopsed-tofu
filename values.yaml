tofu:
  image: ghcr.io/opentofu/opentofu:latest
  operation: "apply" # or, destroy, if you're so inclined.
  #operation: "destroy"
  
  backend:
    kubernetes:
      enabled: false
      # secret_suffix: null # defaults to the name of the Helm release
    pg:
      enabled: true
      # see https://www.postgresql.org/docs/current/libpq-envars.html for env/secrets to use
  
  required_providers: # a list of tf providers, with alias, source and version
    - { alias: "harbor", source: "goharbor/harbor", version: "3.10.16" }
  
  tf: # Terraform sources; a map of filename to contents. A "terraform.tf" is autogenerated, so do not use that.
    #main.tf: |-
    #  provider "null" {}
    #  resource "null_resource" "hello" {
    #    provisioner "local-exec" {
    #      command = "echo hello"
    #    }
    #  }
    #variables.tf: |-
    #  variable "foo" {
    #    type = string
    #  }
    #outputs.tf: |-
    #  output "foo" {
    #    value = var.foo
    #  }


secretsToEnv:
  #existingSecrets:
  #  name-of-existing-secret: [ "SOME_KEY_IN_EXISTING_SECRET" ]
  plaintext:
    # For pg backend/state-store; use the same db as Harbor (tofu will create its own schema+table in the db)
    PGHOST: "pgsql-harbor-primary"
    PGPORT: "5432"
    PGSSLMODE: "disable"
    PGDATABASE: "harbor"
    PGUSER: "harbor"
    PGPASSWORD: "harbor123"
    HARBOR_URL: "https://harbor.exmple.com/"
    HARBOR_USERNAME: "admin"
    HARBOR_PASSWORD: "someharborpasswordinplaintext"
    TF_VAR_foo: "heresomething2"
    TF_VAR_robot_password: "somepassword1@A" # Hardcoded; 1 upper, 1 lower, 1 number and 1 special and at least 8 chars required

